{"version":3,"sources":["views/matrix/Matrix.js"],"names":["Matrix","this","props","isSignedIn","columns","className","datasets","label","backgroundColor","data","options","tooltips","enabled","labels","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","aspectRatio","renderAdmin","Component","connect","state","auth"],"mappings":"sQAKMA,E,iKACJ,WACE,OAAKC,KAAKC,MAAMC,WAQd,eAAC,IAAD,CAAYC,SAAO,EAACC,UAAU,SAA9B,UACE,eAAC,IAAD,WACE,cAAC,IAAD,yBACA,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,SAAU,CACR,CACEC,MAAO,WACPC,gBAAiB,sBACjBC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEjC,CACEF,MAAO,WACPC,gBAAiB,qBACjBC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAGnCC,QAAS,CACPC,SAAU,CACRC,SAAS,IAGbC,OAAO,gBAKb,eAAC,IAAD,WACE,cAAC,IAAD,+BACA,cAAC,IAAD,UACE,cAAC,IAAD,CACEP,SAAU,CACR,CACEC,MAAO,mBACPC,gBAAiB,wBACjBM,qBAAsB,sBACtBC,iBAAkB,OAClBC,0BAA2B,sBAC3BC,sBAAuB,sBACvBR,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEjC,CACEF,MAAO,oBACPC,gBAAiB,uBACjBM,qBAAsB,qBACtBC,iBAAkB,OAClBC,0BAA2B,qBAC3BC,sBAAuB,qBACvBR,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAGnCC,QAAS,CACPQ,YAAa,IACbP,SAAU,CACRC,SAAS,IAGbC,OAAQ,CACN,SACA,WACA,WACA,YACA,SACA,UACA,qBAtER,8BACE,2D,oBA8ER,WACE,OAAOZ,KAAKkB,kB,GApFKC,aA8FNC,uBANS,SAACC,GACvB,MAAO,CACLnB,WAAYmB,EAAMC,KAAKpB,cAIa,GAAzBkB,CAA6BrB","file":"static/js/44.5efe3287.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { CCard, CCardBody, CCardGroup, CCardHeader } from \"@coreui/react\";\r\nimport { CChartLine, CChartPolarArea } from \"@coreui/react-chartjs\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Matrix extends Component {\r\n  renderAdmin() {\r\n    if (!this.props.isSignedIn) {\r\n      return (\r\n        <div>\r\n          <h1>You Are Not Signed In</h1>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <CCardGroup columns className=\"cols-2\">\r\n        <CCard>\r\n          <CCardHeader>Line Chart</CCardHeader>\r\n          <CCardBody>\r\n            <CChartLine\r\n              datasets={[\r\n                {\r\n                  label: \"Data One\",\r\n                  backgroundColor: \"rgb(228,102,81,0.9)\",\r\n                  data: [30, 39, 10, 50, 30, 70, 35],\r\n                },\r\n                {\r\n                  label: \"Data Two\",\r\n                  backgroundColor: \"rgb(0,216,255,0.9)\",\r\n                  data: [39, 80, 40, 35, 40, 20, 45],\r\n                },\r\n              ]}\r\n              options={{\r\n                tooltips: {\r\n                  enabled: true,\r\n                },\r\n              }}\r\n              labels=\"months\"\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n\r\n        <CCard>\r\n          <CCardHeader>Polar Area Chart</CCardHeader>\r\n          <CCardBody>\r\n            <CChartPolarArea\r\n              datasets={[\r\n                {\r\n                  label: \"My First dataset\",\r\n                  backgroundColor: \"rgba(179,181,198,0.2)\",\r\n                  pointBackgroundColor: \"rgba(179,181,198,1)\",\r\n                  pointBorderColor: \"#fff\",\r\n                  pointHoverBackgroundColor: \"rgba(179,181,198,1)\",\r\n                  pointHoverBorderColor: \"rgba(179,181,198,1)\",\r\n                  data: [65, 59, 90, 81, 56, 55, 40],\r\n                },\r\n                {\r\n                  label: \"My Second dataset\",\r\n                  backgroundColor: \"rgba(255,99,132,0.2)\",\r\n                  pointBackgroundColor: \"rgba(255,99,132,1)\",\r\n                  pointBorderColor: \"#fff\",\r\n                  pointHoverBackgroundColor: \"rgba(255,99,132,1)\",\r\n                  pointHoverBorderColor: \"rgba(255,99,132,1)\",\r\n                  data: [28, 48, 40, 19, 96, 27, 100],\r\n                },\r\n              ]}\r\n              options={{\r\n                aspectRatio: 1.5,\r\n                tooltips: {\r\n                  enabled: true,\r\n                },\r\n              }}\r\n              labels={[\r\n                \"Eating\",\r\n                \"Drinking\",\r\n                \"Sleeping\",\r\n                \"Designing\",\r\n                \"Coding\",\r\n                \"Cycling\",\r\n                \"Running\",\r\n              ]}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCardGroup>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.renderAdmin();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isSignedIn: state.auth.isSignedIn,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(Matrix);\r\n"],"sourceRoot":""}